package com.variability;

import net.minecraftforge.common.ForgeConfigSpec;

import java.util.Arrays;
import java.util.List;

public class VConfig {

    private static final ForgeConfigSpec.Builder COMMON_BUILDER = new ForgeConfigSpec.Builder();
    public static ForgeConfigSpec COMMON_CONFIG;

    public static final String BLOCK_CATEGORY = "block_properties";
    public static ForgeConfigSpec.IntValue MORNING_TRANSFORMATION_TIME;
    public static ForgeConfigSpec.IntValue RAINBOW_TRANSFORMATION_TIME;
    public static ForgeConfigSpec.IntValue EVENING_TRANSFORMATION_TIME;
    public static ForgeConfigSpec.IntValue SILVER_PROPORTION;
    public static ForgeConfigSpec.IntValue GOLDEN_PROPORTION;
    public static ForgeConfigSpec.IntValue RAINBOW_TRANSFORMATION_CHANCE;
    public static ForgeConfigSpec.IntValue TOTEM_NUMBER_USES;
    public static ForgeConfigSpec.IntValue TOTEM_RADIUS;

    public static final String ARMOR_MATERIAL_CATEGORY = "armor_properties";
    public static ForgeConfigSpec.IntValue IRON_PLATE_DURABILITY;
    public static ForgeConfigSpec.IntValue IRON_PLATE_DEF_FEET;
    public static ForgeConfigSpec.IntValue IRON_PLATE_DEF_LEGS;
    public static ForgeConfigSpec.IntValue IRON_PLATE_DEF_CHEST;
    public static ForgeConfigSpec.IntValue IRON_PLATE_DEF_HELMET;
    public static ForgeConfigSpec.IntValue IRON_PLATE_ENCHANT;
    public static ForgeConfigSpec.DoubleValue IRON_PLATE_TOUGHNESS;
    public static ForgeConfigSpec.IntValue HOLY_DURABILITY;
    public static ForgeConfigSpec.IntValue HOLY_DEF_FEET;
    public static ForgeConfigSpec.IntValue HOLY_DEF_LEGS;
    public static ForgeConfigSpec.IntValue HOLY_DEF_CHEST;
    public static ForgeConfigSpec.IntValue HOLY_DEF_HELMET;
    public static ForgeConfigSpec.IntValue HOLY_ENCHANT;
    public static ForgeConfigSpec.DoubleValue HOLY_TOUGHNESS;
    public static ForgeConfigSpec.IntValue JAPANESE_LIGHT_DURABILITY;
    public static ForgeConfigSpec.IntValue JAPANESE_LIGHT_DEF_FEET;
    public static ForgeConfigSpec.IntValue JAPANESE_LIGHT_DEF_LEGS;
    public static ForgeConfigSpec.IntValue JAPANESE_LIGHT_DEF_CHEST;
    public static ForgeConfigSpec.IntValue JAPANESE_LIGHT_DEF_HELMET;
    public static ForgeConfigSpec.IntValue JAPANESE_LIGHT_ENCHANT;
    public static ForgeConfigSpec.DoubleValue JAPANESE_LIGHT_TOUGHNESS;
    public static ForgeConfigSpec.IntValue O_YOROI_DURABILITY;
    public static ForgeConfigSpec.IntValue O_YOROI_DEF_FEET;
    public static ForgeConfigSpec.IntValue O_YOROI_DEF_LEGS;
    public static ForgeConfigSpec.IntValue O_YOROI_DEF_CHEST;
    public static ForgeConfigSpec.IntValue O_YOROI_DEF_HELMET;
    public static ForgeConfigSpec.IntValue O_YOROI_ENCHANT;
    public static ForgeConfigSpec.DoubleValue O_YOROI_TOUGHNESS;
    public static ForgeConfigSpec.IntValue PHARAOH_DURABILITY;
    public static ForgeConfigSpec.IntValue PHARAOH_DEF_FEET;
    public static ForgeConfigSpec.IntValue PHARAOH_DEF_LEGS;
    public static ForgeConfigSpec.IntValue PHARAOH_DEF_CHEST;
    public static ForgeConfigSpec.IntValue PHARAOH_DEF_HELMET;
    public static ForgeConfigSpec.IntValue PHARAOH_ENCHANT;
    public static ForgeConfigSpec.DoubleValue PHARAOH_TOUGHNESS;
    public static ForgeConfigSpec.IntValue RAIJIN_DURABILITY;
    public static ForgeConfigSpec.IntValue RAIJIN_DEF_FEET;
    public static ForgeConfigSpec.IntValue RAIJIN_DEF_LEGS;
    public static ForgeConfigSpec.IntValue RAIJIN_DEF_CHEST;
    public static ForgeConfigSpec.IntValue RAIJIN_DEF_HELMET;
    public static ForgeConfigSpec.IntValue RAIJIN_ENCHANT;
    public static ForgeConfigSpec.DoubleValue RAIJIN_TOUGHNESS;

    public static final String WORLD_GENERATION_CATEGORY = "world_generation";
    public static ForgeConfigSpec.ConfigValue<List<? extends String>> CAMELLIA_GENERATION;
    public static ForgeConfigSpec.IntValue CAMELLIA_ROLLS;
    public static ForgeConfigSpec.ConfigValue<List<? extends String>> CYPRESS_GENERATION;
    public static ForgeConfigSpec.IntValue CYPRESS_ROLLS;
    public static ForgeConfigSpec.ConfigValue<List<? extends String>> MULBERRY_GENERATION;
    public static ForgeConfigSpec.IntValue MULBERRY_ROLLS;
    public static ForgeConfigSpec.ConfigValue<List<? extends String>> RICE_GENERATION;
    public static ForgeConfigSpec.IntValue RICE_ROLLS;
    public static ForgeConfigSpec.ConfigValue<List<? extends String>> WILD_GRAPE_GENERATION;
    public static ForgeConfigSpec.IntValue WILD_GRAPE_ROLLS;
    public static ForgeConfigSpec.ConfigValue<List<? extends String>> WILD_MAIZE_GENERATION;
    public static ForgeConfigSpec.IntValue WILD_MAIZE_ROLLS;
    public static ForgeConfigSpec.ConfigValue<List<? extends String>> COMMELINA_GENERATION;
    public static ForgeConfigSpec.IntValue COMMELINA_ROLLS;

    public static final String ENTITY_CATEGORY = "entity_properties";
    public static ForgeConfigSpec.IntValue SMOKE_MONSTER_FIRST_COOLDOWN;
    public static ForgeConfigSpec.IntValue SMOKE_MONSTER_REMOVE_COOLDOWN;
    public static ForgeConfigSpec.IntValue SMOKE_MONSTER_ATTACK_FREQUENCY;
    public static ForgeConfigSpec.IntValue SMOKE_MONSTER_RANGE;

    static{

        COMMON_BUILDER.comment("----------------------------------------|| Armor settings ||---------------------------------------").push(ARMOR_MATERIAL_CATEGORY);
            COMMON_BUILDER.push("iron_plate");
                IRON_PLATE_DURABILITY = COMMON_BUILDER.comment("DurabilityFactor is multiplied with a value that depends on the armor part (between 11 and 16) to get the total durability :").defineInRange("ironPlateDurabilityFactor", 15,1,1000);
                IRON_PLATE_DEF_HELMET = COMMON_BUILDER.comment("Helmet damage reduction :").defineInRange("ironPlateDefenseHelmet", 2,1,100);
                IRON_PLATE_DEF_CHEST = COMMON_BUILDER.comment("Chest damage reduction :").defineInRange("ironPlateDefenseChest", 6,1,100);
                IRON_PLATE_DEF_LEGS = COMMON_BUILDER.comment("Legs damage reduction :").defineInRange("ironPlateDefenseLegs", 5,1,100);
                IRON_PLATE_DEF_FEET = COMMON_BUILDER.comment("Feet damage reduction :").defineInRange("ironPlateDefenseFeet", 2,1,100);
                IRON_PLATE_ENCHANT = COMMON_BUILDER.comment("This armor's enchantability :").defineInRange("ironPlateEnchantability", 20,1,100);
                IRON_PLATE_TOUGHNESS = COMMON_BUILDER.comment("This armor's toughness :").defineInRange("ironPlateToughness", 0.0,0.0,100.0);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("holy");
                HOLY_DURABILITY = COMMON_BUILDER.comment("DurabilityFactor is multiplied with a value that depends on the armor part (between 11 and 16) to get the total durability :").defineInRange("holyDurabilityFactor", 45,1,1000);
                HOLY_DEF_HELMET = COMMON_BUILDER.comment("Helmet damage reduction :").defineInRange("holyDefenseHelmet", 5,1,100);
                HOLY_DEF_CHEST = COMMON_BUILDER.comment("Chest damage reduction :").defineInRange("holyDefenseChest", 10,1,100);
                HOLY_DEF_LEGS = COMMON_BUILDER.comment("Legs damage reduction :").defineInRange("holyDefenseLegs", 8,1,100);
                HOLY_DEF_FEET = COMMON_BUILDER.comment("Feet damage reduction :").defineInRange("holyDefenseFeet", 5,1,100);
                HOLY_ENCHANT = COMMON_BUILDER.comment("This armor's enchantability :").defineInRange("holyEnchantability", 8,1,100);
                HOLY_TOUGHNESS = COMMON_BUILDER.comment("This armor's toughness :").defineInRange("holyToughness", 4.0,0.0,100.0);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("japanese_light");
                JAPANESE_LIGHT_DURABILITY = COMMON_BUILDER.comment("DurabilityFactor is multiplied with a value that depends on the armor part (between 11 and 16) to get the total durability :").defineInRange("japaneseLightDurabilityFactor", 15,1,1000);
                JAPANESE_LIGHT_DEF_HELMET = COMMON_BUILDER.comment("Helmet damage reduction :").defineInRange("japaneseLightDefenseHelmet", 2,1,100);
                JAPANESE_LIGHT_DEF_CHEST = COMMON_BUILDER.comment("Chest damage reduction :").defineInRange("japaneseLightDefenseChest", 6,1,100);
                JAPANESE_LIGHT_DEF_LEGS = COMMON_BUILDER.comment("Legs damage reduction :").defineInRange("japaneseLightDefenseLegs", 5,1,100);
                JAPANESE_LIGHT_DEF_FEET = COMMON_BUILDER.comment("Feet damage reduction :").defineInRange("japaneseLightDefenseFeet", 1,1,100);
                JAPANESE_LIGHT_ENCHANT = COMMON_BUILDER.comment("This armor's enchantability :").defineInRange("japaneseLightEnchantability", 14,1,100);
                JAPANESE_LIGHT_TOUGHNESS = COMMON_BUILDER.comment("This armor's toughness :").defineInRange("japaneseLightToughness", 0.0,0.0,100.0);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("o_yoroi");
                O_YOROI_DURABILITY = COMMON_BUILDER.comment("DurabilityFactor is multiplied with a value that depends on the armor part (between 11 and 16) to get the total durability :").defineInRange("oYoroiDurabilityFactor", 33,1,1000);
                O_YOROI_DEF_HELMET = COMMON_BUILDER.comment("Helmet damage reduction :").defineInRange("oYoroiDefenseHelmet", 3,1,100);
                O_YOROI_DEF_CHEST = COMMON_BUILDER.comment("Chest damage reduction :").defineInRange("oYoroiDefenseChest", 8,1,100);
                O_YOROI_DEF_LEGS = COMMON_BUILDER.comment("Legs damage reduction :").defineInRange("oYoroiDefenseLegs", 6,1,100);
                O_YOROI_DEF_FEET = COMMON_BUILDER.comment("Feet damage reduction :").defineInRange("oYoroiDefenseFeet", 3,1,100);
                O_YOROI_ENCHANT = COMMON_BUILDER.comment("This armor's enchantability :").defineInRange("oYoroiEnchantability", 10,1,100);
                O_YOROI_TOUGHNESS = COMMON_BUILDER.comment("This armor's toughness :").defineInRange("oYoroiToughness", 2.0,0.0,100.0);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("pharaoh");
                PHARAOH_DURABILITY = COMMON_BUILDER.comment("DurabilityFactor is multiplied with a value that depends on the armor part (between 11 and 16) to get the total durability :").defineInRange("pharaohDurabilityFactor", 12,1,1000);
                PHARAOH_DEF_HELMET = COMMON_BUILDER.comment("Helmet damage reduction :").defineInRange("pharaohDefenseHelmet", 3,1,100);
                PHARAOH_DEF_CHEST = COMMON_BUILDER.comment("Chest damage reduction :").defineInRange("pharaohDefenseChest", 8,1,100);
                PHARAOH_DEF_LEGS = COMMON_BUILDER.comment("Legs damage reduction :").defineInRange("pharaohDefenseLegs", 6,1,100);
                PHARAOH_DEF_FEET = COMMON_BUILDER.comment("Feet damage reduction :").defineInRange("pharaohDefenseFeet", 3,1,100);
                PHARAOH_ENCHANT = COMMON_BUILDER.comment("This armor's enchantability :").defineInRange("pharaohEnchantability", 37,1,100);
                PHARAOH_TOUGHNESS = COMMON_BUILDER.comment("This armor's toughness :").defineInRange("pharaohToughness", 0.0,0.0,100.0);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("raijin");
                RAIJIN_DURABILITY = COMMON_BUILDER.comment("DurabilityFactor is multiplied with a value that depends on the armor part (between 11 and 16) to get the total durability :").defineInRange("raijinDurabilityFactor", 45,1,1000);
                RAIJIN_DEF_HELMET = COMMON_BUILDER.comment("Helmet damage reduction :").defineInRange("raijinDefenseHelmet", 4,1,100);
                RAIJIN_DEF_CHEST = COMMON_BUILDER.comment("Chest damage reduction :").defineInRange("raijinDefenseChest", 10,1,100);
                RAIJIN_DEF_LEGS = COMMON_BUILDER.comment("Legs damage reduction :").defineInRange("raijinDefenseLegs", 8,1,100);
                RAIJIN_DEF_FEET = COMMON_BUILDER.comment("Feet damage reduction :").defineInRange("raijinDefenseFeet", 4,1,100);
                RAIJIN_ENCHANT = COMMON_BUILDER.comment("This armor's enchantability :").defineInRange("raijinEnchantability", 26,1,100);
                RAIJIN_TOUGHNESS = COMMON_BUILDER.comment("This armor's toughness :").defineInRange("raijinToughness", 2.0,0.0,100.0);
            COMMON_BUILDER.pop();
        COMMON_BUILDER.pop();

        COMMON_BUILDER.comment("---------------------------------------|| Entity settings ||---------------------------------------").push(ENTITY_CATEGORY);
            COMMON_BUILDER.push("smoke_monster");
                SMOKE_MONSTER_FIRST_COOLDOWN = COMMON_BUILDER.comment("Delay in ticks before the first attack against a target from the Smoke Monster :").defineInRange("smokeMonsterFirstCooldown", 100, 0, 1000);
                SMOKE_MONSTER_REMOVE_COOLDOWN = COMMON_BUILDER.comment("Delay in ticks before the Smoke Monster is removed if it still has no target :").defineInRange("smokeMonsterRemoveCooldown", 200, 0, 10000);
                SMOKE_MONSTER_ATTACK_FREQUENCY = COMMON_BUILDER.comment("Frequency in ticks at which the Smoke Monster attacks :").defineInRange("smokeMonsterAttackFrequency", 30, 5, 500);
                SMOKE_MONSTER_RANGE = COMMON_BUILDER.comment("Horizontal range at which the Smoke Monster detects players :").defineInRange("smokeMonsterRange", 32, 1, 100);
            COMMON_BUILDER.pop();
        COMMON_BUILDER.pop();

        COMMON_BUILDER.comment("---------------------------------------|| Block settings ||----------------------------------------").push(BLOCK_CATEGORY);
            COMMON_BUILDER.push("transformations");
                MORNING_TRANSFORMATION_TIME = COMMON_BUILDER.comment("Morning time at which flamingo blocks must change in ticks (default at 6:05 am = 100 ticks). Blue/Silver/Golden flamingos transform in Pink/Silver/Golden flamingos.").defineInRange("morningTransformationTime", 100, 0, 23999);
                RAINBOW_TRANSFORMATION_TIME = COMMON_BUILDER.comment("Time at which a random flamingo block is chosen to become the Rainbow Flamingo for one day. The last Rainbow Flamingo change back to Pink Flamingo (default at 12:00 am = 6000 ticks).").defineInRange("rainbowTransformationTime", 6000, 0, 23999);
                EVENING_TRANSFORMATION_TIME = COMMON_BUILDER.comment("Evening time at which flamingo blocks must change in ticks (default at 7:00 pm = 13000 ticks). Pink flamingos transform in Blue flamingos.").defineInRange("eveningTransformationTime", 13000, 0, 23999);
                SILVER_PROPORTION = COMMON_BUILDER.comment("Each day, x% of Flamingos transform into silver flamingo with x this parameter.").defineInRange("silverProportion", 10, 0, 100);
                GOLDEN_PROPORTION = COMMON_BUILDER.comment("Each day, x% of Flamingos transform into golden flamingo with x this parameter.").defineInRange("goldenProportion", 5, 0, 100);
                RAINBOW_TRANSFORMATION_CHANCE = COMMON_BUILDER.comment("Each day, one flamingo becomes the rainbow flamingo. If there are less than N Flamingos, a rainbow flamingo is not guaranteed: the probability to have a rainbow flamingo generated is [current_number_of_flamingos/N] with N this parameter.").defineInRange("rainbowThreshold", 10, 1, 1000);
            COMMON_BUILDER.push("totem");
                TOTEM_NUMBER_USES = COMMON_BUILDER.comment("Defines the number of time the totem_rune can be used before breaking.").defineInRange("totemUses", 10, 1, 1000);
                TOTEM_RADIUS = COMMON_BUILDER.comment("Defines the radius of effect of the totem.").defineInRange("totemRadius", 50, 1, 500);
            COMMON_BUILDER.pop();
        COMMON_BUILDER.pop();

        COMMON_BUILDER.comment("----------------------------------|| World generation settings ||----------------------------------").push(WORLD_GENERATION_CATEGORY);
            COMMON_BUILDER.push("camellia");
                CAMELLIA_GENERATION = COMMON_BUILDER.comment("List of biomes where this plant should spawn during world generation (must be empty if the plant must not spawn :").defineList("camelliaBiomes", Arrays.asList("minecraft:flower_forest", "minecraft:jungle", "minecraft:jungle_hills", "minecraft:jungle_edge"), obj -> true);
                CAMELLIA_ROLLS = COMMON_BUILDER.comment("For each spawn zone, a position will be chose x times to place this plant, with x the following value :").defineInRange("camelliaRolls", 5,1,200);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("cypress");
                CYPRESS_GENERATION = COMMON_BUILDER.comment("List of biomes where this plant should spawn during world generation (must be empty if the plant must not spawn :").define("cypressBiomes", Arrays.asList("minecraft:flower_forest", "minecraft:taiga", "minecraft:taiga_hills", "minecraft:giant_tree_taiga", "minecraft:giant_tree_taiga_hills", "minecraft:giant_spruce_taiga", "minecraft:giant_spruce_taiga_hills"), obj -> true);
                CYPRESS_ROLLS = COMMON_BUILDER.comment("For each spawn zone, a position will be chose x times to place this plant, with x the following value :").defineInRange("cypressRolls", 15,1,200);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("mulberry");
                MULBERRY_GENERATION = COMMON_BUILDER.comment("List of biomes where this plant should spawn during world generation (must be empty if the plant must not spawn :").define("mulberryBiomes", Arrays.asList("minecraft:flower_forest", "minecraft:taiga", "minecraft:taiga_hills", "minecraft:giant_tree_taiga", "minecraft:giant_tree_taiga_hills", "minecraft:giant_spruce_taiga", "minecraft:giant_spruce_taiga_hills"), obj -> true);
                MULBERRY_ROLLS = COMMON_BUILDER.comment("For each spawn zone, a position will be chose x times to place this plant, with x the following value :").defineInRange("mulberryRolls", 64,1,200);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("rice");
                RICE_GENERATION = COMMON_BUILDER.comment("List of biomes where this plant should spawn during world generation (must be empty if the plant must not spawn :").define("riceBiomes", Arrays.asList("minecraft:swamp", "minecraft:river", "minecraft:swamp_hills"), obj -> true);
                RICE_ROLLS = COMMON_BUILDER.comment("For each spawn zone, a position will be chose x times to place this plant, with x the following value :").defineInRange("riceRolls", 64,1,200);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("wild_grape");
                WILD_GRAPE_GENERATION = COMMON_BUILDER.comment("List of biomes where this plant should spawn during world generation (must be empty if the plant must not spawn :").define("wildGrapeBiomes", Arrays.asList("minecraft:flower_forest", "minecraft:tall_birch_forest", "minecraft:tall_birch_hills", "minecraft:birch_forest", "minecraft:birch_forest_hills"), obj -> true);
                WILD_GRAPE_ROLLS = COMMON_BUILDER.comment("For each spawn zone, a position will be chose x times to place this plant, with x the following value :").defineInRange("wildGrapeRolls", 64,1,200);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("wild_maize");
                WILD_MAIZE_GENERATION = COMMON_BUILDER.comment("List of biomes where this plant should spawn during world generation (must be empty if the plant must not spawn :").define("wildMaizeBiomes", Arrays.asList("minecraft:flower_forest", "minecraft:savanna", "minecraft:savanna_plateau", "minecraft:shattered_savanna", "minecraft:shattered_savanna_plateau"), obj -> true);
                WILD_MAIZE_ROLLS = COMMON_BUILDER.comment("For each spawn zone, a position will be chose x times to place this plant, with x the following value :").defineInRange("wildMaizeRolls", 64,1,200);
            COMMON_BUILDER.pop();
            COMMON_BUILDER.push("commelina");
                COMMELINA_GENERATION = COMMON_BUILDER.comment("List of biomes where this plant should spawn during world generation (must be empty if the plant must not spawn :").define("commelinaBiomes", Arrays.asList("minecraft:flower_forest", "minecraft:swamp", "minecraft:swamp_hills"), obj -> true);
                COMMELINA_ROLLS = COMMON_BUILDER.comment("For each spawn zone, a position will be chose x times to place this plant, with x the following value :").defineInRange("commelinaRolls", 64,1,200);
            COMMON_BUILDER.pop();
        COMMON_BUILDER.pop();

        COMMON_CONFIG = COMMON_BUILDER.build();
    }
}
